
# Autor: Jos√© Fernando Aguilera Gonz√°lez
# Fecha de creaci√≥n: 2025-07-21 
# √öltima actualizaci√≥n: 2025-07-23
# Requisitos: windows, conexi√≥n a Internet
# Licencia: MIT
# Descripci√≥n: Este script instala rig, R, RStudio y pak en un sistema Windows.
# Tema: Instalaci√≥n de R y RStudio en Windows
# Uso: Copia y pega este comando en PowerShell como administrador (omite el s√≠mbolo #):
# irm https://raw.githubusercontent.com/fherglez501/IVE/main/instaladores/winget_rig.ps1 | iex

# ----------------------------------------------------------------
# ‚ö†Ô∏è AVISO IMPORTANTE:
# Para ejecutar este script necesitas permisos de administrador.
# Si NO tienes acceso como administrador, o NO recuerdas tu contrase√±a:
# üëâ Descarga e instala R manualmente desde: https://www.r-project.org/
# üëâ Descarga e instala RStudio manualmente desde: https://posit.co/download/rstudio-desktop/
# Luego, abre RStudio y ejecuta en la consola: install.packages("pak")
# ----------------------------------------------------------------

Write-Host ""
Write-Host "üß™ Curso: Introducci√≥n al an√°lisis en R" -ForegroundColor Cyan
Write-Host "üîß Iniciando instalaci√≥n automatizada en Windows..." -ForegroundColor Green
Write-Host ""

# ---------------------------
# VERIFICAR EJECUCI√ìN COMO ADMINISTRADOR
# ---------------------------

Write-Host ""
Write-Host "üîê Es posible que Windows te solicite permisos de administrador." -ForegroundColor Yellow
Write-Host "‚ÑπÔ∏è Si ves una ventana emergente, haz clic en 'S√≠' para continuar." -ForegroundColor Gray
Write-Host "üîë Si se te pide una contrase√±a, usa la de un usuario con privilegios de administrador." -ForegroundColor Gray
Write-Host ""

Write-Host "‚ÑπÔ∏è  TIPOS DE CUENTA Y QU√â OCURRE AL EJECUTAR COMO ADMINISTRADOR" -ForegroundColor Cyan
Write-Host ""
Write-Host "  Tipo de cuenta              | Lo que se solicita"
Write-Host "  ----------------------------|-------------------------------------------"
Write-Host "  Cuenta local con admin      | Solo se muestra una ventana (S√≠/No)"
Write-Host "  Cuenta restringida          | Solicita la contrase√±a de un usuario admin"
Write-Host "  Cuenta Microsoft con admin  | Pide la contrase√±a de esa cuenta"
Write-Host ""

If (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole(`
        [Security.Principal.WindowsBuiltInRole] "Administrator"))
{
    Write-Host "‚ùå Este script debe ejecutarse como administrador." -ForegroundColor Red
    Write-Host "‚ÑπÔ∏è Haz clic derecho sobre el icono de PowerShell y selecciona 'Ejecutar como administrador'." -ForegroundColor Yellow
    Write-Host "üîÅ Copia y Pega nuevamente este script en PowerShell." -ForegroundColor Yellow
    Exit 1
}

# ---------------------------
# VERIFICAR VERSI√ìN DE WINDOWS
# ---------------------------
$version = (Get-ComputerInfo).WindowsVersion
if ($version -lt 1809) {
    Write-Host "‚ùå Este script requiere Windows 10 versi√≥n 1809 o superior para utilizar winget." -ForegroundColor Red
    Exit 1
}

# ---------------------------
# FUNCI√ìN: VERIFICAR E INSTALAR WINGET
# ---------------------------
function Install-WingetIfNeeded {
    Write-Host ""
    Write-Host "üîç Verificando disponibilidad de winget..." -ForegroundColor Blue

    if (-not (Get-Command winget -ErrorAction SilentlyContinue)) {
        Write-Host "‚ùå winget no est√° disponible en este sistema." -ForegroundColor Red
        Write-Host "üîÑ Intentando instalar App Installer desde Microsoft Store..." -ForegroundColor Gray

        $storeApp = Get-AppxPackage -Name "Microsoft.WindowsStore" -ErrorAction SilentlyContinue
        if (-not $storeApp) {
            Write-Host "‚ùå Microsoft Store no est√° instalada. Intentando restaurarla..." -ForegroundColor Yellow
            try {
                Add-AppxPackage -DisableDevelopmentMode -Register "C:\Program Files\WindowsApps\Microsoft.WindowsStore_8wekyb3d8bbwe\AppxManifest.xml"
                Write-Host "‚úÖ Microsoft Store restaurada. √Åbrela e instala 'App Installer' manualmente." -ForegroundColor Green
            } catch {
                Write-Host "‚ö†Ô∏è No se pudo restaurar la Microsoft Store." -ForegroundColor Red
                Write-Host "üëâ Descarga manual App Installer: https://aka.ms/getappinstaller" -ForegroundColor Cyan
                Exit 1
            }
        }

        try {
            Start-Process "ms-windows-store://pdp/?ProductId=9NBLGGH4NNS1"
            Write-Host "‚ÑπÔ∏è Se ha abierto la tienda. Instala 'App Installer' y vuelve a ejecutar este script." -ForegroundColor Gray
            Write-Host "üîÅ Recuerda abrir PowerShell como Administrador." -ForegroundColor Yellow
        } catch {
            Write-Host "‚ö†Ô∏è No se pudo abrir Microsoft Store autom√°ticamente." -ForegroundColor Yellow
            Write-Host "üîó Abre manualmente: https://aka.ms/getappinstaller" -ForegroundColor Cyan
        }

        Exit 1
    } else {
        Write-Host "‚úÖ winget est√° disponible." -ForegroundColor Green
        Write-Host "üîÑ Actualizando fuentes de winget..." -ForegroundColor Blue
        try {
            winget source update
        } catch {
            Write-Host "‚ö†Ô∏è No se pudo actualizar winget. Continuando..." -ForegroundColor Yellow
        }
    }
}

# Ejecutar funci√≥n
Install-WingetIfNeeded

# ---------------------------
# INSTALAR WINDOWS TERMINAL
# ---------------------------
if (-not (Get-Command wt.exe -ErrorAction SilentlyContinue)) {
    Write-Host "üì¶ Instalando Windows Terminal..." -ForegroundColor Blue
    winget install --id Microsoft.WindowsTerminal -e --accept-source-agreements --accept-package-agreements
} else {
    Write-Host "‚úÖ Windows Terminal ya est√° instalado." -ForegroundColor Green
}

# ---------------------------
# INSTALAR GIT
# ---------------------------
if (-not (Get-Command git.exe -ErrorAction SilentlyContinue)) {
    Write-Host "üì¶ Instalando Git for Windows..." -ForegroundColor Blue
    winget install --id Git.Git -e --accept-source-agreements --accept-package-agreements
} else {
    Write-Host "‚úÖ Git ya est√° instalado." -ForegroundColor Green
}

# ---------------------------
# VERIFICAR QUE GIT EST√â EN EL PATH
# ---------------------------
Write-Host "üîç Verificando que Git est√© disponible en el PATH..." -ForegroundColor Blue

$gitCmd = Get-Command git.exe -ErrorAction SilentlyContinue
if (-not $gitCmd) {
    $gitPath = "C:\Program Files\Git\cmd\git.exe"
    if (Test-Path $gitPath) {
        $envPath = [Environment]::GetEnvironmentVariable("Path", "Machine")
        if ($envPath -notlike "*C:\Program Files\Git\cmd*") {
            Write-Host "üîß Agregando Git al PATH del sistema..." -ForegroundColor Yellow
            $newPath = $envPath + ";C:\Program Files\Git\cmd"
            [Environment]::SetEnvironmentVariable("Path", $newPath, "Machine")
            Write-Host "‚úÖ Git ha sido agregado al PATH del sistema." -ForegroundColor Green
        } else {
            Write-Host "‚ÑπÔ∏è Git est√° instalado, pero necesitas reiniciar la terminal para usarlo." -ForegroundColor Gray
        }
    } else {
        Write-Host "‚ö†Ô∏è Git no se encontr√≥ en el PATH ni en la ruta por defecto." -ForegroundColor Red
        Write-Host "üëâ Puedes agregarlo manualmente desde Configuraci√≥n avanzada del sistema." -ForegroundColor Yellow
    }
} else {
    Write-Host "‚úÖ Git est√° correctamente disponible en el PATH." -ForegroundColor Green
}

# ---------------------------
# INSTALAR RIG
# ---------------------------
Write-Host "üì¶ Instalando rig..." -ForegroundColor Blue
winget install --id posit.rig -e --accept-source-agreements --accept-package-agreements

if (-not (Get-Command rig -ErrorAction SilentlyContinue)) {
    Write-Host "‚ö†Ô∏è rig no est√° disponible en el PATH a√∫n." -ForegroundColor Yellow
    Write-Host "üîÅ Al finalizar la instalaci√≥n, reinicia PowerShell o abre una nueva terminal para asegurar su disponibilidad." -ForegroundColor Gray
    Exit 1
}
Write-Host "‚úÖ rig instalado correctamente." -ForegroundColor Green

# ---------------------------
# INSTALAR R CON RIG
# ---------------------------
Write-Host "üì¶ Instalando la √∫ltima versi√≥n de R con rig..." -ForegroundColor Blue
rig add release

# ---------------------------
# CONFIGURAR RIG
# ---------------------------
Write-Host "üîß Configurando entorno con rig..." -ForegroundColor Blue
rig system add-pak
rig system rtools
rig system setup-user-lib

# ---------------------------
# INSTALAR RSTUDIO
# ---------------------------
Write-Host "üì¶ Instalando RStudio Desktop..." -ForegroundColor Blue
winget install --id Posit.RStudio -e --accept-source-agreements --accept-package-agreements

# ---------------------------
# MENSAJE FINAL
# ---------------------------
Write-Host ""
Write-Host "üéâ Instalaci√≥n completada: R y RStudio ya est√°n disponibles en tu sistema." -ForegroundColor Green
Write-Host "üí° Puedes buscar 'RStudio' en el men√∫ de inicio para comenzar a trabajar." -ForegroundColor Cyan
Write-Host "üí° Puedes abrir Git Bash desde el men√∫ inicio o utilizar Git directamente desde RStudio." -ForegroundColor Cyan
Write-Host "üîÅ Por favor, reinicia PowerShell al finalizar todo el proceso para que los cambios surtan efecto." -ForegroundColor Gray
Write-Host "‚ö†Ô∏è Recuerda abrir PowerShell como Administrador." -ForegroundColor Yellow
Write-Host ""